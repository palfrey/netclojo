S = globals | (globals spacing)? (block endline)* block whitespace? comment? newline?
globals = <"globals"> whitespace inputs
own-thing = thing <"-own"> whitespace inputs
<block> = own-thing | line | whitespace?
line = whitespace? (to | to-report |if| ifelse | ask | (identifier (whitespace expression)*))
<finish> = whitespace? comment?
<newline> = <"\n">
end = <"end">
to = <"to"> whitespace identifier whitespace inputs
to-report = <"to-report"> whitespace identifier whitespace inputs
identifier = #'[a-zA-Z][a-zA-Z-\d]*'
<comment> = <";"> <#'[^\n]*'>
<whitespace> = <#'[ \t]+'>
number = #"-?\d+"
report = <"report"> whitespace expression
<expression> = number
	| identifier
	| (identifier whitespace expression)
	| (identifier whitespace binary whitespace number)
	| brackets
	| unary whitespace expression
	| inputs whitespace "of" whitespace identifier
brackets = <"("> whitespace? expression whitespace? <")">
<unary> = minus
<binary> = gte | gt
gte = <">=">
gt = <">">
minus = <"-">
inputs = <"["> whitespace? identifier (whitespace identifier)* whitespace? <"]">
<thing> = turtles | patches | links
turtles = <"turtles">
patches = <"patches">
links = <"links">
<endline> = finish newline whitespace?
<spacing> = (whitespace | endline)
ask = <"ask"> whitespace identifier spacing (number spacing)* <"["> spacing line (whitespace? comment? newline line)* spacing <"]">
ifblock = <"["> spacing line (newline line)* spacing <"]"> finish
if = <"if"> whitespace expression finish newline whitespace? ifblock
ifelse = <"ifelse"> whitespace expression spacing ifblock spacing ifblock
