S = (block endline)* block finish newline?
<block> = line | whitespace?
line = whitespace? (to|to-report|ask|foreach|ifelse|own|(!("to"|"end"|"turtles-own"|"patches-own"|"links-own"|"ifelse"|"ask"|"foreach") expression)) finish
<finish> = whitespace? comment?
<newline> = <"\n"> (finish <"\n">)*
identifier = #'[a-zA-Z][a-zA-Z-\d\?]*'
<comment> = <";"> <#'[^\n]*'>
<whitespace> = <#'[ \t]+'>
number = #"-?\d+(?:\.\d+)?"
<expression> = number
	| identifier
	| (expression whitespace expression)
	| (expression whitespace binary whitespace expression)
	| brackets
	| unary whitespace expression
	| expressionblock
	| string
	| item
item = <"?"> #"\d+"?
string = <"\""> #'[^\"]*' <"\"">
<expressions> = expression? (whitespace expression)*
statements = line (newline line)*
brackets = <"("> whitespace? expression whitespace? <")">
<unary> = minus
<binary> = gte | gt | lt | multiply | add | minus | equal
gte = <">=">
gt = <">">
lt = <"<">
minus = <"-">
multiply = <"*">
add = <"+">
equal = <"=">
<endline> = finish newline whitespace?
<spacing> = (whitespace | endline)
<statementblock> = <"["> spacing? statements spacing? <"]">
expressionblock =<"["> whitespace? expressions whitespace? <"]">
ask = <"ask"> whitespace expression spacing statementblock
foreach = <"foreach"> whitespace expression spacing statementblock
ifelse = <"ifelse"> whitespace expression spacing statementblock spacing statementblock
own = ("turtles"|"patches"|"links") <"-own"> whitespace expressionblock
to = <"to"> whitespace expression (whitespace expressionblock)? endline statements newline <"end">
to-report = <"to-report"> whitespace expression (whitespace expressionblock)? endline statements newline <"end">
