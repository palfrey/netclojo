S = globals? block+
globals = <"globals"> whitespace inputs finish newline
own-thing = thing <"-own"> whitespace inputs finish newline
block = (whitespace? newline) | own-thing | toline (line newline)+ endline
<toline> = (to-report |to) whitespace identifier (whitespace inputs)? finish newline
<endline> = end finish
line = whitespace? (ifelse | ask | report | (identifier (whitespace arg)*)) finish
<finish> = whitespace? comment?
<newline> = <"\n">
to = <"to">
to-report = <"to-report">
end = <"end">
identifier = #'[a-zA-Z][a-zA-Z-\d]*'
<comment> = <";"> <#'.*'>
<whitespace> = <#'\s+'>
arg = number | identifier | expression
<number> = #"\d+"
report = <"report"> whitespace expression
<expression> = number
	| identifier
	| (math whitespace expression)
	| (identifier whitespace binary whitespace number)
	| brackets
	| unary whitespace expression
	| inputs whitespace <"of"> whitespace identifier
brackets = <"("> whitespace? expression whitespace? <")">
<unary> = minus
<binary> = gte
gte = <">=">
minus = <"-">
inputs = <"["> whitespace? identifier (whitespace identifier)* whitespace? <"]">
<math> = mean
mean = <"mean">
<thing> = turtles | patches | links
turtles = <"turtles">
patches = <"patches">
links = <"links">
ask = <"ask"> whitespace identifier whitespace <"["> (whitespace | newline) whitespace? line (newline line)* (whitespace | newline) <"]">
ifblock = <"["> (whitespace | newline) line (newline line)* (whitespace | newline) <"]"> finish
ifelse = <"ifelse"> whitespace expression finish newline whitespace? ifblock (whitespace | newline) ifblock
